{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["md","html","jsCode","Component","data","codeText","htmlText","mdText","methods","handleTagATap"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;AClFA,IAAMA,KAAM,eACA,aADA,GAEA,cAFA,GAGA,wDAHA,GAIA,cAJA,GAKA,wBALA,GAMA,uBANA,GAOA,2CAPZ;;AASA,IAAMC,2vKAAN;;AA0JA,IAAMC,g+BAAN;;AAiCAC,UAAU;AACRC,QAAM;AACJC,cAAUH,MADN;AAEJI,cAAUL,IAFN;AAGJM,YAAQP;AAHJ,GADE;;AAORQ,WAAS;AACPC,iBADO,2BACS,CACf;AAFM;AAPD,CAAV,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","const md =  '# 我是一级标题\\n' + \n            '## 我是二级标题\\n' +\n            '### 我是三级标题\\n' +\n            '[**Showdown**](http://www.showdownjs.com) is *great*\\n' +\n            '\\nbecause:\\n' +\n            ' - it\\'s easy to use\\n' +\n            ' - it\\'s extensible\\n' +\n            ' - works in the server and in the browser';\n\nconst html = `\n<head>\n  <meta chatset=\"utf-8\" />\n  <title>test...</title>\n  <style>\n    .test {color: \"red\";}\n    div {font-size: \"12px\";}\n  </style>\n  <script>console.log('test');</script>\n</head>\n<div style=\"margin: 10px 0 10px;\">\n  <b>* blockquote标签</b>\n</div>\n<blockquote>\\r\\n<p>std::string&nbsp; abc [] = {\\\"test\\\",\\\"test2\\\",\\\"test3\\\",\\\"test4\\\"};<\\/p>\\r\\n<\\/blockquote>\n<div style=\"margin: 10px 0 10px;\">\n  <b>* code标签</b>\n</div>\n<pre>\n<code lang=\"bash\">\n#!/bin/bash\n\necho \"Hello World!\"\n</code>\n</pre>\n<pre>\n<code lang=\"xml\">\n<div>\ncsonchen\n</div>  \n</code>\n</pre>\n<pre class=\"language-c\">\n<code lang=\"c\">\n// C++11 \n\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nstd::vector vs {\"a\", \"be\", \"see\"}; \nstd::size_t length = vs.size();\n</code>\n</pre>\n<pre>\n<code lang=\"c++\" style=\"margin-bottom: 10px;\">\\/\\/C++11\\r\\n\\r\\ntemplate &lt; typename T, std::size_t N &gt;\\r\\nconstexpr std::size_t size( T(&amp;)[N] ) { return N ; }\\r\\n\\r\\n\\r\\nstd::cout &lt;&lt; \\\"array 'abc' size: \\\" &lt;&lt; size(abc) &lt;&lt; ' ' ;<\\/code>\n<code lang=\"javascript\">\nconst name = 'csonchen'\nconst test = () => {\nreturn name\n}\ntest()\n</code>\n</pre>\n<div style=\"margin: 10px 0 10px;\">\n  <b>* 字体标签</b>\n</div>\n<h1>h1</h1>\n<h2>h2</h2>\n<h3>h3</h3>\n<h4>h4</h4>\n\n<div style=\"margin: 10px 0 10px;\">\n  <b>* video标签</b>\n</div>\n<video src=\"http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400\"></video>\n\n<div style=\"margin: 10px 0 10px;\">\n  <b>* audio标签</b>\n</div>\n<audio title=\"我是标题\" desc=\"我是小标题\" src=\"https://media.lycheer.net/lecture/25840237/5026279_1509614610000.mp3?0.1\"></audio>\n\n<p style=\"margin: 10px 0 10px;\">\n  <b>* p标签</b>\n</p>\n<p>你可以想象这里有一个DOM映射器，见名知义，这个’DOM 映射器‘的工作就是将 Virtual-DOM 对象树映射浏览器页面的 DOM，只不过为了提高 DOM 的'操作性能'. 它不是每一次都全量渲染整个 Virtual-DOM 树，而是支持接收两颗 Virtual-DOM 对象树(一个更新前，一个更新后), 通过 diff 算法计算出两颗 Virtual-DOM 树差异的地方，然后只应用这些差异的地方到实际的 DOM 树, 从而减少 DOM 变更的成本.</p>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* 转义字符</b>\n</div>&lt;div style=&quot;color:red&quot;&gt;我是转义字符&lt;/div&gt; \n\n<div style=\"margin: 10px 0 10px;\">\n<b>* a标签跳转</b>\n</div> \n<div>\n  <a href=\"https://www.baidu.com\" title=\"我是外链跳转\" target=\"_blank\">a标签跳转（外链跳转）</a>&nbsp; \n</div>\n<div>\n  <a href=\"/pages/highLightPage/highLightPage\" title=\"我是内链跳转\" target=\"_blank\">a标签跳转（内链跳转）</a>&nbsp; \n</div>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* 内联标签</b>\n</div> \n<span style=\"background-color: rgb(139, 170, 74);\">我是内联标签</span>\n<br />\n<p></p>\n<p></p>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* ul无序列表</b>\n</div>\n<ul>\n<li style=\"text-align: center;\"><span style=\"background-color: rgb(139, 170, 74);\">1</span></li>\n</ul>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* ol有序列表</b>\n</div>\n<ol>\n<li><font style=\"vertical-align: inherit;\">张三</font></li>\n<li><font style=\"vertical-align: inherit;\">李四</font></li>\n</ol>\n<ol>\n<li style=\"text-align: center;\"><span style=\"background-color: rgb(139, 170, 74);\">test</span></li>\n<li><span style=\"background-color: rgb(139, 170, 74);\">test2</span></li>\n</ol>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* hr标签</b>\n<hr />\n</div>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* 表格渲染</b>\n</div>\n<table>\n  <tr>\n    <th>标题1</th>\n    <th>标题2</th>\n    <th>标题3</th>\n    <th>标题4</th>\n    <th>标题5</th>\n  </tr>\n  <tr>\n    <td>cell1</td>\n    <td>cell2</td>\n    <td>cell3</td>\n    <td>cell4</td>\n    <td>cell5</td>\n  </tr>\n  <tr>\n    <td>cell1</td>\n    <td>cell2</td>\n    <td>cell3</td>\n    <td>cell4</td>\n    <td>cell5</td>\n  </tr>\n</table>\n\n<div style=\"margin: 10px 0 10px;\">\n<b>* 图片渲染</b>\n</div>\n<p><img src=\"https://dev-sit-1251698455.cos.ap-guangzhou.myqcloud.com/ds/22/363/20200401/3c9e7798e3204756b9e0f3263882b81f.jpeg\" /><img src=\"https://mmbiz.qpic.cn/mmbiz_png/1gmcynicwloGkVMTr6wTHdDXlFUSaSxOSRELianAFGJYVzvXJKoM2xbbFMqKe6ONy5zoHHejNbibTJn5gdEOc1aIA/0?wx_fmt=png\" width=\"200\" height=\"100\" style=\"text-align: center;margin: 0 auto;\"/></p>\n`\n\nconst jsCode = \n`init = jQuery.fn.init = function( selector, context, root ) {\n  var match, elem;\n\n  // v1.4之后，可以创建不包含任何DOM节点的空jQuery对象\n  if ( !selector ) {\n    return this\n  }\n\n  // 处理字符串\n  if ( typeof selector === 'string' ) {\n    // 处理 HTML 字符串\n    if ( selector[ 0 ] === '<' && selector[ selector.length - 1 ] === '>' && selector.length >= 3) {\n        // ....\n\n    // 其它字符串，当做选择器处理    \n    } else {\n      match = rquickExpr.exec( selector )\n    }\n\n  // 处理 DOM 节点 => $(DOMElement)  \n  } else if ( selector.nodeType ) {\n    // .....\n\n  // 处理函数 => $(function)\n  } else if ( typeof selector === 'function' ) {\n    // ....\n  }\n\n  // 处理其它情况\n  return jQuery.makeArray( selector, this )\n}`\n\nComponent({\n  data: {\n    codeText: jsCode,\n    htmlText: html,\n    mdText: md,\n  },\n\n  methods: {\n    handleTagATap() {\n    }\n  }\n})\n"],"sourceRoot":""}